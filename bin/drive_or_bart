#!/usr/bin/env ruby
require_relative '../init'

class UI
  attr_reader :origin, :destination, :trips

  def initialize(origin, destination)
    @origin      = load_address(origin)
    @destination = load_address(destination)

    params = {:origin => @origin, :destination => @destination}

    @trips = {
      :driving => Trip.new(params.merge(:mode => 'driving')),
      :transit => Trip.new(params.merge(:mode => 'transit')),
      :walking => Trip.new(params.merge(:mode => 'walking')),
      :bicycle => Trip.new(params.merge(:mode => 'bicycle')),
    }
  end
  
  def print_table
    if @trips.values.all? { |trip| trip.valid? }
      puts "Origin:      %s" % [@origin]
      puts "Destination: %s" % [@destination]
      puts ""
      print_row ['Mode', 'Duration', 'Distance']

      @trips.sort_by { |mode, trip| trip.duration }.each do |mode, trip|
        print_row [mode, format_seconds(trip.duration), format_meters(trip.distance)]
      end
    else
      puts "Oops, looks like you might have a bad address!"
      puts "Did you use an incorrect or non-existent label?"
      puts ""
      puts "Origin:      %s" % [@origin]
      puts "Destination: %s" % [@destination]
    end
  end
  
  private
  def print_row(row)
    puts "% -10s\t% -10s\%s" % row
  end

  def load_address(label_or_content)
    Address.find_by_label(label_or_content) || Address.new(:content => label_or_content)
  end

  def format_seconds(minutes)
    "%d min" % (minutes/60)
  end
  
  def format_meters(meters)
    # Convert to miles, and only include two decimal points
    "%0.2f mi" % (meters/1609.34)
  end
end

# Whattahack

case ARGV[0]
when 'save'
  label = ARGV[1]
  content = ARGV[2]

  if address = Address.find_by_label(label)
    address.content = content
    address.save
  else
    Address.create(:label => label, :content => content)
  end
when 'list'
  puts "label\taddress"
  Address.all.each do |address|
    puts "%s\t%s" % [address.label, address.content]
  end
else
  if ARGV.length != 2
    puts <<-USAGE
    Usage:   
      drive_or_bart <origin> <destination>
      drive_or_bart save <label> <address>
      drive_or_bart list

    Examples:
      drive_or_bart '249 Oak St San Francisco, CA' '717 California St San Francisco, CA'
      drive_or_bart save home '249 Oak St San Francisco, CA'
      drive_or_bart save work '717 California St San Francisco, CA'
      drive_or_bart home work
USAGE
  else
    ui = UI.new(ARGV[0], ARGV[1])
    ui.print_table
  end
end